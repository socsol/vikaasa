function vk_state = vk_4dgui_state_sanitise(vk_state)
    % Either use the 'vardata' field supplied by vk_state (if there is
    % one), or use a dummy.
    
    if (~isfield(vk_state, 'vardata'))
        vardata_default = {'x', 'x', 0, 1, '0'; 'y', 'y', 0, 1, '1'};
    elseif (size(vk_state.vardata, 2) == 4)
        extra_column = {'w'; 'x'; 'y'; 'z'};
        vardata_default = horzcat(vk_state.vardata(:, 1), ...
            extra_column(1:size(vk_state.vardata, 1), :), ...
            vk_state.vardata(:, 2:4));
    else
        vardata_default = vk_state.vardata;
    end
    
    % Now use the constructed vardata to determine some of the defaults.
    vk_defaults_from_vardata = vk_4dgui_state_from_vardata(vardata_default);
            
    vk_state_default = struct(...
        'vardata', vardata_default, ...
        vk_defaults_from_vardata{:}, ...
        'alpha', 0.9, ...
        'autosave', 0, ...
        'controlalg', 'vk_control_minin', ...
        'controldefault', 0, ...
        'controlmax', 0.005, ...
        'controlsymbol', 'u', ...
        'controltolerance', 1e-3, ...
        'custom_cost_fn', '', ...
        'custom_constraint_set_fn', '', ...
        'debug', 0, ...
        'discretisation', 11, ...
        'drawbox', 0, ...
        'holdfig', 0, ...
        'layers', 1, ...
        'numslices', 0, ...
        'plotcolour', [1, 1, 0], ...
        'plottingmethod', 'qhull', ...
        'progressbar', 1, ...
        'sim_controlalg', 'vk_control_zero', ...
        'sim_iterations', 10, ...
        'sim_line_colour', [0 0 1], ...
        'sim_line_width', 2, ...
        'sim_method', 'ode', ...
        'sim_showpoints', 0, ...
        'sim_start', zeros(size(vardata_default, 1), 1), ...
        'sim_stopsteady', 0, ...
        'slice1', 1, ...
        'slice1plane', zeros(size(vardata_default, 1), 1), ...
        'slice2', 1, ...
        'slice2plane', zeros(size(vardata_default, 1), 1), ...
        'steps', 1, ...
        'stoppingtolerance', 1e-3, ...
        'timediscretisation', 1, ...
        'use_controldefault', 0, ...
        'use_custom_cost_fn', 0, ...
        'use_custom_constraint_set_fn', 0 ...        
    );
    
    fn = fieldnames(vk_state_default);
    for i = 1:length(fn)
        if (~isfield(vk_state, fn{i}))
            vk_state.(fn{i}) = vk_state_default.(fn{i});
        end
    end        
    
    vk_state.numvars = size(vk_state.vardata, 1);
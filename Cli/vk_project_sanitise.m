%% VK_4DGUI_PROJECT_SANITISE Set default values for the project, if missing
%
% See also: VIKAASA, CLI, GUI
function project = vk_project_sanitise(project)
    %% Check if the project has any mis-named elements
    rename = struct(...
        'constraint_set', 'K', ...
        'diff_eqn', 'diff_eqns', ...
        'controlmax', 'c');
    
    fn = fieldnames(rename);
    for i = 1:size(fn, 1);
        if (isfield(project, fn{i}))
            project.(rename.(fn{i})) = project.(fn{i});
            project = rmfield(project, fn{i});
        end
    end

    %% Work with vardata to work out what kinds of defaults to use
    % Either use the 'vardata' field supplied by project (if there is
    % one), or use a dummy.
    
    if (~isfield(project, 'vardata'))
        vardata_default = {'x', 'x', 0, 1, '0'; 'y', 'y', 0, 1, '1'};
    elseif (size(project.vardata, 2) == 4)
        extra_column = {'w'; 'x'; 'y'; 'z'};
        vardata_default = horzcat(project.vardata(:, 1), ...
            extra_column(1:size(project.vardata, 1), :), ...
            project.vardata(:, 2:4));
    else
        vardata_default = project.vardata;
    end
    
    %% Now use the constructed vardata to determine some of the defaults.
    vk_defaults_from_vardata = vk_project_from_vardata(vardata_default);
            
    project_default = struct(...
        vk_defaults_from_vardata{:}, ...
        'alpha', 0.9, ...
        'autosave', 0, ...
        'controlalg', 'ZeroControl', ...
        'controldefault', 0, ...
        'c', 0.005, ...
        'controlbounded', 0, ...
        'controlenforce', 0, ...
        'controlsymbol', 'u', ...
        'controltolerance', 1e-3, ...
        'custom_cost_fn', '', ...
        'custom_constraint_set_fn', '', ...
        'debug', 0, ...
        'discretisation', 11, ...
        'drawbox', 0, ...
        'holdfig', 0, ...
        'layers', 1, ...
        'parallel_processors', 2, ...
        'plotcolour', [1, 1, 0], ...
        'plottingmethod', 'qhull', ...
        'progressbar', 1, ...
        'sim_controlalg', 'ZeroControl', ...
        'sim_iterations', 10, ...
        'sim_line_colour', [0 0 1], ...
        'sim_line_width', 2, ...
        'sim_method', 'ode', ...
        'sim_showpoints', 0, ...
        'sim_start', zeros(size(vardata_default, 1), 1), ...
        'sim_stopsteady', 0, ...
        'slices', [], ...
        'steps', 1, ...
        'stoppingtolerance', 1e-3, ...
        'timediscretisation', 1, ...
        'use_controldefault', 0, ...
        'use_custom_cost_fn', 0, ...
        'use_custom_constraint_set_fn', 0, ...
        'use_parallel', 0 ...
    );
    
    fn = fieldnames(project_default);
    for i = 1:length(fn)
        if (~isfield(project, fn{i}))
            project.(fn{i}) = project_default.(fn{i});
        end
    end        
    
    project.numvars = size(project.vardata, 1);
